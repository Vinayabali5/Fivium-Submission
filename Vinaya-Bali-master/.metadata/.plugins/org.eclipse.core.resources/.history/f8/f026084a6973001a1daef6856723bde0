package com.fivium.recruitment.service;

import org.springframework.stereotype.Service;
import java.io.*; 
import java.util.*;
import java.util.LinkedHashMap;
import java.util.HashMap;
import java.util.Map;

@Service
public class StringParsingService {

  public String reverseString(String input) {
    return new StringBuilder(input).reverse().toString();
  }
  
  public static void findWords(String s, List<String> output, List<Integer> count){
	    String[] words = s.split(" ");
	    Map<String, Integer> map = new LinkedHashMap<>();
	    Arrays.stream(words).forEach(
	    		e-> map.put(e, map.getOrDefault(e, 0) + 1));
	    map.forEach((k,v)->{
	        output.add(k);
	        count.add(v);
	    });
	}
  
  public Map<String, Integer> countAndPrintRepeatedWordOccurences(String strContent){
	  Map<String, Integer> mapOfRepeatedWord = new LinkedHashMap<String, Integer>();
      // split line using space as delimiter
      String[] words = strContent.split(" ");
      // iterate through String[] array
      for(String word : words) {
          // convert all String into lower case, 
          // before comparison
          String tempUCword = word.toLowerCase();
          // check whether Map contains particular word 
          if(mapOfRepeatedWord.containsKey(tempUCword)){
              mapOfRepeatedWord.put(tempUCword, mapOfRepeatedWord.get(tempUCword) + 1);
          } else {
              mapOfRepeatedWord.put(tempUCword, 1);
          }
      }
//      for(Map.Entry<String, Integer> entry : mapOfRepeatedWord.entrySet()){
//      }

      return mapOfRepeatedWord;
  }
	 
  }    